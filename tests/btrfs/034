#!/bin/bash
# FS QA Test No. btrfs/034
#
# Regression test for running snapshots and send concurrently.
#
#-----------------------------------------------------------------------
# Copyright (c) 2014 Fujitsu.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
snapshots_pid=0

_cleanup()
{
	# kill backgroud snapshots
	if [ $snapshots_pid -ne 0 ] && ps -p $snapshots_pid | grep -q $snapshots_pid; then
		kill -TERM $snapshots_pid 2> /dev/null
	fi
	rm -f $tmp.*
}

do_snapshots()
{
	i=2
	while [ 1 ]
	do
		$BTRFS_UTIL_PROG subvolume snapshot -r $SCRATCH_MNT/snap_1 \
			$SCRATCH_MNT/snap_$i >> $seqres.full 2>&1
		let i=$i+1
		sleep 1
	done
}

trap "_cleanup ; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs btrfs
_supported_os Linux
_require_scratch

_scratch_mkfs > /dev/null 2>&1
_scratch_mount

touch $SCRATCH_MNT/foo

# get file with fragments by using backwards writes.
for i in `seq 10240 -1 1`; do
	$XFS_IO_PROG -f -d -c "pwrite $(($i * 4096)) 4096" \
		$SCRATCH_MNT/foo > /dev/null | _filter_xfs_io
done

$BTRFS_UTIL_PROG subvolume snapshot -r $SCRATCH_MNT \
	$SCRATCH_MNT/snap_1 >> $seqres.full 2>&1

do_snapshots &
snapshots_pid=$!

$BTRFS_UTIL_PROG send $SCRATCH_MNT/snap_1 -f /dev/null 2>&1 | _filter_scratch

status=0 ; exit
