#! /bin/bash
# FSQA Test No. btrfs/038
#
# Quota rescan stress test, we run fsstress and quota rescan concurrently
#
#-----------------------------------------------------------------------
# Copyright (C) 2014 Fujitsu.  All rights reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1

_cleanup()
{
       rm -f $tmp.*
}
trap "_cleanup; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_need_to_be_root
_supported_fs btrfs
_supported_os Linux
_require_scratch
_require_no_large_scratch_dev

workout()
{
       _scratch_mkfs "-b 2g --nodesize 4096" >>$seqres.full 2>&1 \
               || _fail "size=$fsz mkfs failed"
       run_check _scratch_mount

       # -w ensures that the only ops are ones which cause write I/O
       $FSSTRESS_PROG -d $SCRATCH_MNT -w -p 5 -n 1000 $FSSTRESS_AVOID >&/dev/null
       $BTRFS_UTIL_PROG subvolume snapshot $SCRATCH_MNT \
               $SCRATCH_MNT/snap1 >>$seqres.full 2>&1
       $FSSTRESS_PROG -d $SCRATCH_MNT/snap1 -w -p 5 -n 1000 $FSSTRESS_AVOID >&/dev/null

       run_check $BTRFS_UTIL_PROG quota enable $SCRATCH_MNT
       run_check $BTRFS_UTIL_PROG quota rescan -w $SCRATCH_MNT

       #ignore removing subvolume errors
       rm -rf $SCRATCH_MNT/* >& /dev/null
       sync
       $BTRFS_UTIL_PROG qgroup show $SCRATCH_MNT | sed -n '/[0-9]/p' | awk '{print $1" "$2" "$3 }'
}
workout

status=0
exit
