#! /bin/bash
# FS QA Test No. 050
#
# Exercises basic XFS quota functionality
#       uquota, gquota, uqnoenforce, gqnoenforce, pquota, pqnoenforce
#
#-----------------------------------------------------------------------
# Copyright (c) 2000-2002 Silicon Graphics, Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/quota

_cleanup()
{
	cd /
	umount $SCRATCH_MNT 2>/dev/null
	rm -f $tmp.*
}
trap "_cleanup; exit \$status" 0 1 2 3 15

# real QA test starts here
_supported_fs ext4
_supported_os Linux

cp /dev/null $seqres.full
chmod a+rwx $seqres.full	# arbitrary users will write here

_require_scratch

bsoft=100
bhard=500
isoft=4
ihard=10
projectid=1000

_filter_report()
{
	grep $SCRATCH_DEV 2>&1 | tr -s '[:space:]' | _filter_scratch
}

# The actual point at which limit enforcement takes place for the
# hard block limit is variable depending on filesystem blocksize,
# and iosize.  What we want to test is that the limit is enforced
# (ie. blksize less than limit but not unduly less - ~85% is kind)
# nowadays we actually get much closer to the limit before EDQUOT.
#
_filter_and_check_blks()
{
	perl -npe '
		if (/^\#'$id'\s+(\d+)/ && '$enforce') {
			$maximum = '$bhard';
			$minimum = '$bhard' * 85/100;
			if (($1 < $minimum || $1 > $maximum) && '$noextsz') {
				printf(" URK %d: %d is out of range! [%d,%d]\n",
					'$id', $1, $minimum, $maximum);
			}
			s/^(\#'$id'\s+)(\d+)/\1 =OK=/g;
		}
	' | _filter_report
}

_exercise()
{
	_scratch_mkfs_ext4 -O quota,project >> $seqres.full 2>&1

	_scratch_mount >> $seqres.full 2>&1

	if [ $1 == "1" ];then
		quotaon -P $SCRATCH_MNT >> $seqres.full 2>&1
	fi
	chmod 777 $SCRATCH_MNT

	echo "*** report no quota settings" | tee -a $seqres.full
	quota -v -P $projectid | _filter_report
	echo
	echo "*** report initial settings" | tee -a $seqres.full
	_file_as_id $SCRATCH_MNT/initme $projectid p 1024 0
	echo "ls -l $SCRATCH_MNT" >>$seqres.full
	ls -l $SCRATCH_MNT >>$seqres.full
	setquota -P $projectid ${bsoft}K ${bhard}K $isoft $ihard $SCRATCH_MNT
	quota -v -P $projectid | _filter_report

	echo
	echo "*** push past the soft inode limit" | tee -a $seqres.full
	_file_as_id $SCRATCH_MNT/softie1 $projectid p 1024 0
	_file_as_id $SCRATCH_MNT/softie2 $projectid p 1024 0
	quota -v -P $projectid  | _filter_report

	echo
	echo "*** push past the soft block limit" | tee -a $seqres.full
	_file_as_id $SCRATCH_MNT/softie $projectid p 1024 140
	quota -v -P $projectid | _filter_report

	echo
	# Note: for quota accounting (not enforcement), EDQUOT is not expected
	echo "*** push past the hard inode limit (expect EDQUOT)" | tee -a $seqres.full
	for i in 1 2 3 4 5 6 7 8 9 10 11 12
	do
		_file_as_id $SCRATCH_MNT/hard$i $projectid p 1024 0
	done
	quota -v -P $projectid | _filter_report

	echo
	# Note: for quota accounting (not enforcement), EDQUOT is not expected
	echo "*** push past the hard block limit (expect EDQUOT)" | tee -a $seqres.full
	_file_as_id $SCRATCH_MNT/softie $projectid p 1024 540
	echo "ls -l $SCRATCH_MNT" >>$seqres.full
	ls -l $SCRATCH_MNT >>$seqres.full
	quota -v -P $projectid | _filter_report

	echo
	echo "*** unmount"
	umount $SCRATCH_MNT

}

_exercise 0

#enforce quota
_exercise 1

# success, all done
status=0
exit
