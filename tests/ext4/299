#! /bin/bash
# FS QA Test No. 299
#
# Exercises basic XFS quota functionality, with all 3 quotas together
#       uquota, gquota, pquota
#       uqnoenforce, gqnoenforce, pqnoenforce
#
#-----------------------------------------------------------------------
# Copyright (c) 2000-2002 Silicon Graphics, Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/quota

_cleanup()
{
	cd /
	umount $SCRATCH_MNT 2>/dev/null
	rm -f $tmp.*
}
trap "_cleanup; exit \$status" 0 1 2 3 15

# real QA test starts here
_supported_fs ext4
_supported_os Linux
_require_scratch

cp /dev/null $seqres.full
chmod a+rwx $seqres.full	# arbitrary users will write here


bsoft=100
bhard=500
isoft=4
ihard=10

_filter_report()
{
	grep $SCRATCH_DEV 2>&1 | tr -s '[:space:]' | _filter_scratch
}

_qsetup()
{
	opt=$1
	if [ $opt = "u" ]; then
		type=u
		#eval `_choose_uid`
		id=99
	elif [ $opt = "g" ]; then
		type=g
		#eval `_choose_gid`
		id=99
	elif [ $opt = "p" ]; then
		type=p
		id=999
	fi

	echo "Using type=$type id=$id" >> $seqres.full
}


_exercise()
{
	type=$1
	if [ $type == "u" ]; then
		id=98
	elif [ $type == "g" ]; then
		id=98
	else
		id=99
	fi

	echo "Using type=$type id=$id" >>$seqres.full
	
	echo
	echo "*** report no quota settings" | tee -a $seqres.full
	if [ $type == "p" ]; then
		quota -v -P $id | _filter_report
	else
		quota -v -$type | _filter_report
	fi

	echo
	echo "*** report initial settings" | tee -a $seqres.full
	_file_as_id $SCRATCH_MNT/initme $id $type 1024 0
	echo "ls -l $SCRATCH_MNT" >>$seqres.full
	ls -l $SCRATCH_MNT >>$seqres.full
	if [ $type == "p" ]; then
		setquota -P $id ${bsoft}K ${bhard}K $isoft $ihard $SCRATCH_MNT
		quota -v -P $id | _filter_report
	else
		setquota -$type $id ${bsoft}K ${bhard}K $isoft $ihard $SCRATCH_MNT
		quota -v -$type $id | _filter_report
	fi

	echo
	echo "*** push past the soft inode limit" | tee -a $seqres.full
	_file_as_id $SCRATCH_MNT/softie1 $id $type 1024 0
	_file_as_id $SCRATCH_MNT/softie2 $id $type 1024 0
	if [ $type == "p" ]; then
		quota -v -P $id | _filter_report
	else
		quota -v -$type $id | _filter_report
	fi

	echo
	echo "*** push past the soft block limit" | tee -a $seqres.full
	_file_as_id $SCRATCH_MNT/softie $id $type 1024 140
	if [ $type == "p" ]; then
		quota -v -P $id | _filter_report
	else
		quota -v -$type $id | _filter_report
	fi
	# Note: for quota accounting (not enforcement), EDQUOT is not expected
	echo "*** push past the hard inode limit (expect EDQUOT)" | tee -a $seqres.full
	for i in 1 2 3 4 5 6 7 8 9 10 11 12
	do
		_file_as_id $SCRATCH_MNT/hard$i $id $type 1024 0
	done
	if [ $type == "p" ]; then
		quota -v -P $id | _filter_report
	else
		quota -v -$type $id | _filter_report
	fi

	echo
	# Note: for quota accounting (not enforcement), EDQUOT is not expected
	echo "*** push past the hard block limit (expect EDQUOT)" | tee -a $seqres.full
	_file_as_id $SCRATCH_MNT/softie $id $type 1024 540
	echo "ls -l $SCRATCH_MNT" >>$seqres.full
	ls -l $SCRATCH_MNT >>$seqres.full
	if [ $type == "p" ]; then
		quota -v -P $id | _filter_report
	else
		quota -v -$type $id | _filter_report
	fi

	echo
	# clean up our files so we don't pollute the next run
	rm -f $SCRATCH_MNT/* >& /dev/null
}

# non-root users need to be able to write to this filesystem
_scratch_mkfs_ext4 -O quota,project >> $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1
chmod 777 $SCRATCH_MNT

_exercise p
_exercise g
_exercise u

echo "*** unmount"
umount $SCRATCH_MNT
_scratch_mkfs_ext4 -O quota,project >> $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1
chmod 777 $SCRATCH_MNT

quotaon -uPg $SCRATCH_MNT
_exercise p
_exercise g
_exercise u

echo "*** unmount"
umount $SCRATCH_MNT

# success, all done
status=0
exit
